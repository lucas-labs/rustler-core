//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15
mod svc;
use sea_orm::entity::prelude::*;
pub use svc::Service;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "market")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub short_name: String,
    pub full_name: String,
    pub opens_from: i32,
    pub opens_till: i32,
    pub open_time: String,
    pub close_time: String,
    pub pre_market_offset: i32,
    pub post_market_offset: i32,
    pub time_zone_offset: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::ticker::Entity")]
    Ticker,
}

impl Related<super::ticker::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Ticker.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
